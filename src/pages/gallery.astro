---
// 1. Frontmatter: Server-side JavaScript/TypeScript goes here.
//    Import the Masonry component so you can use it below.
import { Masonry } from 'astro-masonry';

// You could add other imports, data fetching, or variable definitions here:
// const pageTitle = "My Amazing Gallery";
// const images = ['/image1.jpg', '/image2.jpg'];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Astro Masonry Gallery</title>
    <style>
      body {
        font-family: sans-serif;
        margin: 20px;
        background-color: #f4f4f4;
      }
      h1 {
        text-align: center;
        color: #333;
      }
      .masonry-item {
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px; /* Spacing between items in columns */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        text-align: center;
      }
      /* Optional: Basic styling for Masonry columns if needed by astro-masonry, though it often handles its own layout */
      .my-masonry-grid {
        display: -webkit-box; /* Not needed if astro-masonry uses flex directly */
        display: -ms-flexbox; /* Not needed if astro-masonry uses flex directly */
        display: flex;
        margin-left: -30px; /* gutter size offset */
        width: auto;
      }
      .my-masonry-grid_column {
        padding-left: 30px; /* gutter size */
        background-clip: padding-box;
      }
      .my-masonry-grid_column > div { /* child elements of Masonry grid */
        background: grey;
        margin-bottom: 30px;
      }
    </style>
  </head>
  <body>
    <h1>Welcome to My Masonry Gallery!</h1>

    <Masonry
      // These props define how many columns appear at different screen widths
      breakpointCols={{
        default: 4,  // 4 columns by default (for large screens)
        1100: 3,     // 3 columns when screen width is 1100px or less
        700: 2,      // 2 columns when screen width is 700px or less
        500: 1       // 1 column when screen width is 500px or less (mobile)
      }}
      // You might add classNames for styling the grid container itself
      className="my-masonry-grid"
      columnClassName="my-masonry-grid_column"
    >
      <div class="masonry-item">
        <h2>Item 1</h2>
        <p>Short description of item 1.</p>
        <img src="https://picsum.photos/150/200" alt="Image 1" style="max-width:100%; height:auto;">
      </div>
      <div class="masonry-item">
        <h2>Item 2</h2>
        <p>A slightly longer description for item 2, making this box taller.</p>
        <img src="https://via.placeholder.com/150x300?text=Image+2" alt="Image 2" style="max-width:100%; height:auto;">
      </div>
      <div class="masonry-item">
        <h2>Item 3</h2>
        <p>Just item 3.</p>
        <img src="https://via.placeholder.com/150x150?text=Image+3" alt="Image 3" style="max-width:100%; height:auto;">
      </div>
      <div class="masonry-item">
        <h2>Item 4</h2>
        <p>This item has a very long description to demonstrate how the masonry layout adjusts.</p>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
        <img src="https://via.placeholder.com/150x400?text=Image+4" alt="Image 4" style="max-width:100%; height:auto;">
      </div>
      <div class="masonry-item">
        <h2>Item 5</h2>
        <p>Another item.</p>
        <img src="https://via.placeholder.com/150x250?text=Image+5" alt="Image 5" style="max-width:100%; height:auto;">
      </div>
      <div class="masonry-item">
        <h2>Item 6</h2>
        <p>And a final short one.</p>
        <img src="https://via.placeholder.com/150x180?text=Image+6" alt="Image 6" style="max-width:100%; height:auto;">
      </div>
    </Masonry>
  </body>
</html>